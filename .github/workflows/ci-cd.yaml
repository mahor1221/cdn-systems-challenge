name: CI-CD

on:
  push:
    branches:
    - main
  create:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - main

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Check spelling
        uses: crate-ci/typos@master

      - name: Lint
        run: |
          cargo clippy --profile=ci
          cargo doc --profile=ci

      - name: Test
        run: cargo test --profile=ci

  create-release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: Upload assets
    if: startsWith(github.ref, 'refs/tags/')
    needs: create-release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          checksum: "sha256"
          bin: cdn-systems-challenge
          token: ${{ secrets.GITHUB_TOKEN }}
